import pygame
from pygame.locals import *

# Cargamos las bibliotecas de OpenGL
from OpenGL.GL import *
from OpenGL.GLU import *
from OpenGL.GLUT import *

import random
import math
import numpy as np

class Estante:
    def __init__(self, offset_z=5.0, x=0, y=0):
        self.offset_z = offset_z
        
        self.points = [
            #primer cajon
            [ 0, 0,  1],
            [ 0, 0, -1],
            [-1, 0, -1],
            [-1, 0,  1],

            [ 0, 3,  1],
            [ 0, 3, -1],
            [-1, 3, -1],
            [-1, 3,  1],

            [ 0, 0,  1],
            [ 0, 0, -1],
            [ 0, 3, -1],
            [ 0, 3,  1],

            [ 0, 0, -1],
            [-1, 0, -1],
            [-1, 3, -1],
            [ 0, 3, -1],

            [-1, 0, -1],
            [-1, 0,  1],
            [-1, 3,  1],
            [-1, 3, -1],

            [-1, 0,  1],
            [ 0, 0,  1],
            [ 0, 3,  1],
            [-1, 3,  1],
            #segundo cajon
            [ 0, 20,  1],
            [ 0, 20, -1],
            [-1, 20, -1],
            [-1, 20,  1],

            [ 0, 23,  1],
            [ 0, 23, -1],
            [-1, 23, -1],
            [-1, 23,  1],

            [ 0, 20,  1],
            [ 0, 20, -1],
            [ 0, 23, -1],
            [ 0, 23,  1],

            [ 0, 20, -1],
            [-1, 20, -1],
            [-1, 23, -1],
            [ 0, 23, -1],

            [-1, 20, -1],
            [-1, 20,  1],
            [-1, 23,  1],
            [-1, 23, -1],

            [-1, 20,  1],
            [ 0, 20,  1],
            [ 0, 23,  1],
            [-1, 23,  1],
            #primer soporte (-1, -1)
            [ -1, 23,  -1],
            [ -1, 23, -0.75],
            [ -0.75, 23,  -0.75],
            [ -0.75, 23,  -1],

            [ -1, -10,  -1],
            [ -1, -10, -0.75],
            [ -0.75, -10,  -0.75],
            [ -0.75, -10,  -1],

            [ -1, -10,  -1],
            [ -1, -10, -0.75],
            [ -1, 23, -0.75],
            [ -1, 23,  -1],

            [ -1, -10, -0.75],
            [ -0.75, -10,  -0.75],
            [ -0.75, 23,  -0.75],
            [ -1, 23, -0.75],    

            [ -0.75, -10,  -0.75],
            [ -0.75, -10,  -1],        
            [ -0.75, 23,  -1],   
            [ -0.75, 23,  -0.75],

            [ -0.75, -10,  -1],
            [ -1, -10,  -1],
            [ -1, 23,  -1],
            [ -0.75, 23,  -1],

            #segundo soporte (-1, 1)
            [ -1, 23,  1],
            [ -1, 23, 0.75],
            [ -0.75, 23,  0.75],
            [ -0.75, 23,  -1],

            [ -1, -10,  1],
            [ -1, -10, 0.75],
            [ -0.75, -10,  0.75],
            [ -0.75, -10,  1],

            [ -1, -10,  1],
            [ -1, -10, 0.75],
            [ -1, 23, 0.75],
            [ -1, 23,  1],

            [ -1, -10, 0.75],
            [ -0.75, -10,  0.75],
            [ -0.75, 23,  0.75],
            [ -1, 23, 0.75],    

            [ -0.75, -10,  0.75],
            [ -0.75, -10,  1],        
            [ -0.75, 23,  1],   
            [ -0.75, 23,  0.75],

            [ -0.75, -10,   1],
            [ -1, -10,  1],
            [ -1, 23,  1],
            [ -0.75, 23,  1],

            #tercer soporte (0, 1)
            [ 0, 23,  1],
            [ 0, 23, 0.75],
            [ -0.25, 23,  0.75],
            [ -0.25, 23,  1],

            [ 0, -10,  1],
            [ 0, -10, 0.75],
            [ -0.25, -10,  0.75],
            [ -0.25, -10,  1],

            [ 0, -10,  1],
            [ 0, -10, 0.75],
            [ 0, 23, 0.75],
            [ 0, 23,  1],

            [ 0, -10, 0.75],
            [ -0.25, -10,  0.75],
            [ -0.25, 23,  0.75],
            [ 0, 23, 0.75],    

            [ -0.25, -10,  0.75],
            [ -0.25, -10,  1],        
            [ -0.25, 23,  1],   
            [ -0.25, 23,  0.75],

            [ -0.25, -10,   1],
            [ 0, -10,  1],
            [ 0, 23,  1],
            [ -0.25, 23,  1],

            #cuarto soporte (0, -1)
            [ 0, 23,  -1],
            [ 0, 23, -0.75],
            [ -0.25, 23,  -0.75],
            [ -0.25, 23,  -1],

            [ 0, -10,  -1],
            [ 0, -10, -0.75],
            [ -0.25, -10,  -0.75],
            [ -0.25, -10,  -1],

            [ 0, -10,  -1],
            [ 0, -10, -0.75],
            [ 0, 23, -0.75],
            [ 0, 23,  -1],

            [ 0, -10, -0.75],
            [ -0.25, -10,  -0.75],
            [ -0.25, 23,  -0.75],
            [ 0, 23, -0.75],    

            [ -0.25, -10,  -0.75],
            [ -0.25, -10,  -1],        
            [ -0.25, 23,  -1],   
            [ -0.25, 23,  -0.75],

            [ -0.25, -10,   -1],
            [ 0, -10,  -1],
            [ 0, 23,  -1],
            [ -0.25, 23,  -1],
        ]
        self.x = x
        self.y = y

    def update(self):
        """ps no se mueve"""


    def draw(self):
        
        glPushMatrix()

        glTranslatef(self.x * 2 - 120, self.offset_z, self.y)
        glScalef(20, 1, 20)

        for i in range(0, len(self.points), 4):
            glBegin(GL_QUADS)
            glColor3fv([0.586, 0.586, 0.586])
            for v in self.points[i:i + 4]:
                glVertex3fv(v)
            glEnd()
        
        glPopMatrix()
